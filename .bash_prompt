#-------------------------------------------------------------
# Customize prompt
#-------------------------------------------------------------
# 0 : normal, 1 : bold, 4 underline, nothing : background
NoColor="\[\e[0m\]"
Black="\[\e[00;30m\]"
Red="\[\e[00;31m\]"
Green="\[\e[00;32m\]"
GreenBold="\[\e[01;32m\]"
Yellow="\[\e[00;33m\]"
Blue="\[\e[00;34m\]"
BlueBold="\[\e[01;34m\]"
Purple="\[\e[00;35m\]"
Cyan="\[\e[00;36m\]"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

if [[ `which git` ]]; then
    export GIT_PS1_SHOWDIRTYSTATE=true
    export GIT_PS1_SHOWUNTRACKEDFILES=true
    export GIT_PS1_SHOWUPSTREAM="auto"
    GIT_PS1="$Yellow\$(__git_ps1)$NoColor "
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color) color_prompt=yes;;
esac

if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
    # We have color support; assume it's compliant with Ecma-48
    # (ISO/IEC-6429). (Lack of such support is extremely rare, and such
    # a case would tend to support setf rather than setaf.)
    color_prompt=yes
else
    color_prompt=
fi

if [[ $HOSTNAME =~ ^[a-zA-Z0-9]{12} ]]; then
    # The hostname is an autogenerated,
    # replace it by something more meaningful
    HOST_PS1="mbp"
else
    HOST_PS1="\h"
fi

if [ "$USER" == "tugdual.saunier" ] || [ "$USER" == "tucksaun" ]; then
    # The username is usual,
    # don't show it as it's useless
    USER_PS1=""
else
    USER_PS1="\u@"
fi

if [ "$color_prompt" = yes ]; then
    PS1="$Cyan$USER_PS1$HOST_PS1$NoColor:$BlueBold\W$NoColor$GIT_PS1\$ "
else
    PS1='$USER_PS1$HOST_PS1:\W$GIT_PS1\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="$NoColor${debian_chroot:+($debian_chroot)}$PS1"
    ;;
*)
    ;;
esac
